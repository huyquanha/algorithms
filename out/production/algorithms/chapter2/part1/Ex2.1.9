a[]: E A S Y S H E L L S O R T Q U E S T I O N
N = 21
h = 1, 4, 13.
- Starting from h = 13
    - First element consider is i = h = 13, a[13] = Q. Compare with a[0], a[0] < a[13], inner loop exits
    - a[14](U) vs a[1](A), a[1] < a[14], no exch, inner loop exists
    - a[15](E) vs a[2](S), a[15] < a[2] => exch. Then 2 < 13 => done.
    - Similarly we go through the other one until a[20]

a[]: E A E S S H E L L S O R T Q U S Y T I O N

- Now h = 4
    - First element considered is i = h = 4, a[4] = S > a[0] = E => no exch, loop breaks
    - a[5] = H > a[1] = A => no exch, loop breaks
    - a[6] = E = a[2] = E => no exch, loop breaks
    - a[7] = L < a[3] = S => exch, then 3 < 4 => loop breaks
a[]: E A E L S H E S S S O R T Q U S Y T I O N
                 E       O (done)
                   S       R
                   R       S
           L       R (done)
                     S        T (done)
                       S        Q
                       Q        S
               H       Q (done)
                         O
                         ...
Result ater h=4 pass:
a[]: E A E L N H E O S Q I R S S O S T T U S Y
- Last one is h = 1
    - Starting with i = h = 1
E A E L N H E O S Q I R S S O S T T U S Y
  ^
A E E L N H E O S Q I R S S O S T T U S Y (1 comp, 1 exch)
    ^
A E E L N H E O S Q I R S S O S T T U S Y (1 comp, no exch)
      ^
A E E L N H E O S Q I R S S O S T T U S Y (1 comp, no exch)
        ^
A E E L N H E O S Q I R S S O S T T U S Y (1 comp, no exch)
          ^
A E E L N H E O S Q I R S S O S T T U S Y (1 comp, no exch)
            ^
A E E E L N H O S Q I R S S O S T T U S Y (4 comp, 3 exch)
              ^
A E E E L N H O S Q I R S S O S T T U S Y (1 comp, no exch)
                ^
A E E E L N H O S Q I R S S O S T T U S Y (1 comp, no exch)
                  ^
A E E E L N H O Q S I R S S O S T T U S Y (2 comp, 1 exch)
                    ^
A E E E L N H I O Q S R S S O S T T U S Y (4 comp, 3 exch)
                      ^
A E E E L N H I O Q R S S S O S T T U S Y (2 comp, 1 exch)
                        ^
A E E E L N H I O Q R S S S O S T T U S Y (1 comp, no exch)
                          ^
A E E E L N H I O Q R S S S O S T T U S Y (1 comp, no exch)
                            ^
A E E E L N H I O O Q R S S S S T T U S Y (6 comp, 5 exch)
                              ^
A E E E L N H I O O Q R S S S S T T U S Y (1 comp, no exch)
                                ^
A E E E L N H I O O Q R S S S S T T U S Y (1comp, no exch)
                                  ^
A E E E L N H I O O Q R S S S S T T U S Y (1comp, no exch)
                                    ^
A E E E L N H I O O Q R S S S S T T U S Y (1comp, no exch)
                                      ^
A E E E L N H I O O Q R S S S S S T T U Y (4 comp, 3 exch)
                                        ^
A E E E L N H I O O Q R S S S S S T T U Y (1 comp, no exch) and WE ARE DONE

As can be seen from the previous trace for h = 1, most of our operations are 1 compare and no exchanges needed at all,
which proves that shellsort speeds up insertion sort considerably