For simplicity, assume N is a power of 2.
To build a heap of N elements, from N/4 to N/2 we build heaps of size 3 (1 exch, 2 comp), from N/8 to N/4 we build heaps
of size 7 (2 exch, 4 comp), from N/16 to N/8 we build heaps of size 15 (3 exch, 6 comp)
=> total number of compares are double the total number of exchanges
- the number of exchs is:
S = N/(2^2)*1 + N/(2^3) * 2 + N/(2^4) * 3 + ... + N/(2^(lgN-1))*(lgN - 2) + N/(2^lgN) * (lgN - 1)

S/2 = N/(2^3)*1 + N/(2^4) * 2 + N/(2^5) * 3 + ... + N/(2^lgN)*(lgN - 2) + N/(2^(lgN + 1)) * (lgN - 1)

=> S - S/2 = N/2^2 + N/2^3 + N/2^4 + ... + N/(2^lgN) - N/(2^(lgN + 1)) * (lgN - 1)
=> S/2 = N/4 + N/8 + N/16 + ... + 1 - 1/2 * (lgN -1)
=> S = N/2 + N/4 + N/8 + ...+ 2 - lgN + 1

2S =    N + N/2 + N/4 + ... + 4 - 2lgN + 2

=> 2S - S = N - 2lgN + 2 - (2 - lgN + 1) = N - 2lgN + 2 -2 + lgN - 1 = N - lgN - 1 <= N

=> the number of exchanges is at most N => the number of compares is at most 2N
