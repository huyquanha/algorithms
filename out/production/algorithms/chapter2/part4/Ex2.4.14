There is at least 1 exchange: exch(1, N). The element initially at N is smaller than N/2, N/4,...,1
Now that element is at 1, it is definitely going to be smaller than either of the elements at 2 or 3, so
one more exchange is definitely needed (between the element at 1 and the larger of 2 and 3).
To limit the number of exchanges to only these 2 exchanges, we want the other one to be the larger one.
Meaning, if initially the element at N is smaller than N/2, N/4, ..., 2, 1 then we want 3rd > 2nd
If initially the element at N is smaller than N/2, N/4, .., 3, 1 then we want 2nd > 3rd

Let's take N = 15 as an example
15 14 13 12 11 10 9 8 7 6 5 4 3 2 1

element at 15 is smaller than elements at 7, 3, 1. We want the element at 15 to be as large as possible,
but we also want the 2nd element to be larger than the 3rd element. So 2nd is 14 and 3rd is 13, and 7th is 12, and
15th is 11.
Let's check this out:

15 14 13 10 9 8 12 7 6 5 4 3 2 1 11
exch(1, 15)
11 14 13 10 9 8 12 7 6 5 4 3 2 1 15
remove 15
11 14 13 10 9 8 12 7 6 5 4 3 2 1
14 > 13 => exch(1,2)
14 11 13 10 9 8 12 7 6 5 4 3 2 1
10 > 9 and 11 > 10 => no need to exchange.
We have 2 exchanges minimum just as expected


On the other hand, if we were to put 13 at 2nd and 14 at 3rd
15 13 14 10 9 8 12 7 6 5 4 3 2 1 11
exch(1, 15)
11 13 14 10 9 8 12 7 6 5 4 3 2 1 15
exch(1, 3)
14 13 11 10 9 8 12 7 6 5 4 3 2 1
now we will have to exchange with 12 again, since 12 is larger than 11

- 2 successive remove maximum:
15 14 13 10 9 8 12 7 6 5 4 3 2 1 11
14 11 13 10 9 8 12 7 6 5 4 3 2 1