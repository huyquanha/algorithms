For a 32-bit machine (4 bytes reference, 8 bytes obj overhead, padding to multiple of 4)

- Integer: 8 bytes obj overhead + 4 bytes int variable = 12 bytes (no need padding because already is multiple of 4)
- Date: 8 bytes obj overhead + 4*3 = 12 bytes for 3 ints = 20 bytes
- int[]: 12 bytes array header (8 bytes obj overhead + 4 bytes for length) + 4N bytes (one for each int)


- double[]: 12 bytes array header + 8N bytes (one for each double)


- double[][]: M*N array => 12 bytes array header + 4M bytes (references to each row) + 12M (overhead header for each row array)
+ 8MN (the actual doubles) => 12 + 16M + 8MN


- String: 8 bytes obj overhead + 4*3 =12 bytes for 3 int variables + 4 bytes reference to character array => 24 bytes

- Node: 8 bytes obj overhead + 4 bytes reference to the enclosing instance + 4 bytes reference to the Item + 4 bytes
reference to the next Node => 20 bytes

- Stack (linked-list): N nodes => 8 bytes obj overhead + 4 bytes for the count variable + 4 bytes reference to the 1st Node
+ 20N bytes for the nodes thenmselves => 16 + 20N bytes