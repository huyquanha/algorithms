Prove: permutation valid <=> permutation contains no forbidden triple:

- Prove: permutation valid => permutation contains no forbidden triple,
which is equivalent to: permutation contains a forbidden triple => permutation is invalid

a < b < c
...,c,...,a...,b,...

if c is the first number to be popped and c > b > a, a and b has to be in the stack already.
Why? Because we push the numbers in asc order, so after pushing c,
we are only going to push higher numbers than c => a and b cannot be pushed in after c.
Since a and b leave the stack after c, and they cannot be pushed in after c => they have to be in
the stack already before popping c.

Since both a and b are in the stack, and a < b, a has to be pushed into the stack
before b (similar reason: after pushing b, you cannot push smaller numbers than b).
=> a is below b in the stack
=> it's impossible that a can be popped out before b

=> A permutation that contains any 3 numbers that form this forbidden triple will be invalid.

- Prove: permutation contains no forbidden triple => permutation valid
No loss of generalization, assume we have any 3 numbers a < b < c
Apart from the forbidden order, we have these order coming out of the stack:
...,a...,b,...c (1)
...,a,...c,...b (2)
....b,...a,...c (3)
....b,...c,...a (4)
....c,...b,...a (5)

(1) is valid: a pushed, then popped before b pushed, then popped before c pushed, then popped.
(2) is valid: a pushed, then popped, b pushed then c pushed, then c popped then b popped
(3) is valid: a pushed then b pushed, then b popped then a popped, then c pushed and popped
(4) is valid: a pushed, b pushed, then b popped, then c pushed, then c popped, then a popped
(5) is valid: a pushed, then b pushed, then c pushed, then c popped, then b popped, then a popped

As we can see, if permutation contains no forbidden triple, any 3 numbers we pick out of the
permutation must obey one of the 5 orders above, and they are all valid
=> a permutation with no forbidden triple is a valid permutation.



