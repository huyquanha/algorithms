- first check middle element as baseline (N/2)
- then check middle left (N/4). if this is hotter than 1st guess => eliminate the right subarray. 1 compare and we halve the array
- if this equal the baseline, the middle elemet of these 2 is the secret number
- if this is colder than 1st guess, we cut the array to [N/4,N]
    - check middle right (3N/4). If it is colder than N/4, we cut the array to only [N/4,N/2] (2 compares and we 1/4 the array)
    . If it is hotter than N/4, we cut the array to [N/2,N] (2 compare and we halve the array)

=> after one iteration, if we are lucky, on average 1 compare will halve the array. However, on the worst case,
it might happen that we need 2 compares to halve the array => ~ 2lgN

BETTER WAY
- check the first and the last element. IF the first is hotter, we take the left sub-array (first -> mid), else
if the last is hotter, we take the right sub-array (mid->last).
- From the second iteration, we only need to take one more compare for each iteration to be able
to cut the array in half => total ~lg N
