WeightedQuickUnion
N = 10
idx:  0 1 2 3 4 5 6 7 8 9
id[]: 0 1 2 3 4 5 6 7 8 9
sz[]: 1 1 1 1 1 1 1 1 1 1

- 9 0
    - find(9) = 9 (1 arr acc), find(0) = 0 (1 arr acc)
    - union()
        - 2 for find()
        - sz[9] = sz[0] = 1 => link 0 to 9 => id[0] = 9 (1 arr acc)
idx:  0 1 2 3 4 5 6 7 8 9
id[]: 9 1 2 3 4 5 6 7 8 9
sz[]: 1 1 1 1 1 1 1 1 1 2

1 2 3 4 5 6 7 8 9
                |
                0

- 3 4
    - find(3) = 3 (1 arr acc), find(4) = 4 (1 arr acc)
    - union()
        - 2 for find()
        - sz[3]=sz[4] =1 => link 4 to 3 => id[4] = 3 (1 arr acc)
idx:  0 1 2 3 4 5 6 7 8 9
id[]: 9 1 2 3 3 5 6 7 8 9
sz[]: 1 1 1 2 1 1 1 1 1 2

1 2 3 5 6 7 8 9
    |         |
    4         0

- 5 8
    - find(): 2
    - union():
        - 2 for find()
        - sz[5] = sz[8] = 1 => link 8 to 5 => id[8] = 5 (1 arr acc)
idx:  0 1 2 3 4 5 6 7 8 9
id[]: 9 1 2 3 3 5 6 7 5 9
sz[]: 1 1 1 2 1 2 1 1 1 2

1 2     3   5   6 7   9
        |   |         |
        4   8         0

- 7 2
    - find(): 2
    - union()
        - 2 for find()
        - sz[7] = sz[2] = 1 => link 2 to 7 => id[2] = 7 (1 arr acc)
idx:  0 1 2 3 4 5 6 7 8 9
id[]: 9 1 7 3 3 5 6 7 5 9
sz[]: 1 1 1 2 1 2 1 2 1 2

1     3   5   6 7   9
      |   |     |   |
      4   8     2   0

- 2 1
    - find(2) = 7 (3 arr acc), find(1) = 1 (1) => 4 total
    - union()
        - 4 for find()
        - sz[7] = 2 > sz[1] = 1 => link 1 to 7 => id[1] = 7
idx:  0 1 2 3 4 5 6 7 8 9
id[]: 9 7 7 3 3 5 6 7 5 9
sz[]: 1 1 1 2 1 2 1 3 1 2

3   5   6 7    9
|   |     |\   |
4   8     2 1  0

- 5 7
    - find(5) = 5 (1), find(7) = 7 (1) => 2 total
    - union()
        - 2 for find()
        - sz[5] = 2 < sz[7] = 3 => link 5 to 7 => id[5] = 7
idx:  0 1 2 3 4 5 6 7 8 9
id[]: 9 7 7 3 3 7 6 7 5 9
sz[]: 1 1 1 2 1 2 1 5 1 2

3   6    7     9
|       /|\    |
4      5 2 1   0
       |
       8

- 0 3
    - find(0) = 9 (3), find(3) = 3 (1) => 4 total
    - union()
        - 4 for find()
        - sz[9] = sz[3] = 2 => link 3 to 9 => id[3] = 9 (1 arr acc)
idx:  0 1 2 3 4 5 6 7 8 9
id[]: 9 7 7 3 3 7 6 7 5 9
sz[]: 1 1 1 2 1 2 1 5 1 4

6    7     9
    /|\    |\
   5 2 1   0 3
   |         |
   8         4

- 4 2
    - find(4) = 9 (5 arr acc), find(2) = 7 (3 arr acc) => 8 total
    - union()
        - 8 for find()
        - sz[9] = 4 < sz[7] = 5 => link 9 to 7 => id[9] = 7 (1 arr acc)
idx:  0 1 2 3 4 5 6 7 8 9
id[]: 9 7 7 3 3 7 6 7 5 9
sz[]: 1 1 1 2 1 2 1 9 1 4

6    7-----9
    /|\    |\
   5 2 1   0 3
   |         |
   8         4